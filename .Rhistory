bear.raw.forPlot <- all.raw_counts.oglevel %>%
as.data.frame() %>%
filter(str_detect(orthogroup1,'OG')) %>%
pivot_longer(-c(1,2),names_to = 'sample',values_to = 'norm_count') %>%
filter(sample %in% bear.tmm.forPlot$sample) %>%
mutate(sample_id = str_split_fixed(sample,'[_]',2)[,1] %>% str_to_upper()) %>%
left_join(all.sample_info,by='sample_id') %>%
filter(norm_count > 0)
ggplot(bear.raw.forPlot,aes(x=norm_count,group=sample,color=tissue)) +
geom_density(lwd=0.3,alpha=0.85) +
scale_x_log10() +
ggtitle('Bear - Raw Counts') +
xlab('Orthogroup-level Counts (log10 scaled axis)') +
ylab('Density') +
theme_linedraw() + theme(plot.title.position = 'plot',plot.title = element_text(face='bold'),aspect.ratio = 1)
bear.tpm.mat <- read_tsv('analyses/rnaseq_normalization/bear_oglevel_tpmCounts.txt')
human.tpm.mat <- read_tsv('analyses/rnaseq_normalization/human_oglevel_tpmCounts.txt')
# Read in TPM data (generated above) --------------------------------------
bear.tpm.mat <- read_tsv('analyses/rnaseq_normalization/bear_oglevel_tpmCounts.txt')
human.tpm.mat <- read_tsv('analyses/rnaseq_normalization/human_oglevel_tpmCounts.txt')
bear.tpm.df <- bear.tpm.mat %>%
dplyr::rename(og_id=rowname) %>%
filter(str_detect(og_id,'OG')) %>%
select(-cfa_s9) # Remove contaminated adipose sample (see Jansen et al 2019)
human.tpm.df <- human.tpm.mat %>%
dplyr::rename(og_id=rowname) %>%
filter(str_detect(og_id,'OG'))
combined.tpm.df <- bear.tpm.df %>%
left_join(human.tpm.df) %>%
drop_na()
combined.tpm.mat <- as.matrix(combined.tpm.df[,-1])
row.names(combined.tpm.mat) <- combined.tpm.df$og_id
# Combine human and bear tpm tables and normalize with TMM method in edgeR
combined.tpm.df <- bear.tpm.df %>%
left_join(human.tpm.df) %>%
drop_na()
combined.tpm.mat <- as.matrix(combined.tpm.df[,-1])
row.names(combined.tpm.mat) <- combined.tpm.df$og_id
edgeR.delist <- DGEList(counts = combined.tpm.mat)
edgeR.delist <- calcNormFactors(edgeR.delist)
combined.tmm.counts <- cpm(edgeR.delist) %>% as.data.frame() %>% rownames_to_column(var='og_id')
head(combined.tmm.counts)
combined.tmm.forPlot <- combined.tmm.counts %>%
pivot_longer(-1,names_to = 'sample',values_to = 'tmm_count') %>%
mutate(species = ifelse(str_detect(sample,'GTEX'),'human','bear')) %>%
mutate(sample = str_replace_all(sample,'_hy','hy')) %>%
mutate(sample = str_replace_all(sample,'_hi','hi')) %>%
mutate(sample = str_replace_all(sample,'_fa','fa')) %>%
mutate(sample_id = str_split_fixed(sample,'[_]',2)[,1] %>% str_to_upper()) %>%
left_join(all.sample_info,by='sample_id') %>%
mutate(sample_id = ifelse(species=='human',sample,sample_id)) %>%
mutate(tissue = ifelse(species=='human',str_split_fixed(sample,'[_]',2)[,1],tissue))
combined.tmm.forPlot.active <- combined.tmm.forPlot %>%
filter((species == 'bear' & str_detect(tissue,'Active')) | (species == 'human')) %>%
group_by(og_id,species,tissue) %>%
summarise(median_count = median(tmm_count),
avg_count = mean(tmm_count)) %>%
group_by(og_id) %>%
mutate(tissue = str_split_fixed(tissue,'[_]',2)[,1]) %>%
filter(tissue %in% c('Adipose','Liver','Muscle'))
combined.tmm.forPlot.active.v2 <- combined.tmm.forPlot.active %>%
select(og_id,species,tissue,median_count) %>%
pivot_wider(names_from = species,values_from = median_count)
combined.tmm.forPlot.active.goodGenes <- combined.tmm.forPlot.active.v2 %>%
filter(bear > 0 & human > 0)
p1 <- ggplot(combined.tmm.forPlot.active.goodGenes,aes(x=human,y=bear,color=tissue)) +
facet_wrap(~tissue) +
geom_point(alpha=0.2,pch=1) +
geom_abline(slope=1,intercept = 0,lty=2) +
# geom_smooth() +
scale_y_log10() +
labs(x='Human - Median Expression per Orthogroup\n(log10 scaled axis)',y='Bear - Median Expression per Orthogroup\n(log10 scaled axis)') +
scale_x_log10() +
theme_linedraw()
p1
p2 <- ggplot(combined.tmm.forPlot.active.v2,aes(x=log2(human / bear),color=tissue)) +
facet_wrap(~tissue) +
geom_density(lwd=1) +
geom_vline(xintercept = 0,lty=2) +
xlab('Log2(Human Expression / Bear Expression)\n (Median Orthogroup-level Counts)') +
theme_linedraw()
p1 / p2
corr.data <- combined.tmm.forPlot.active %>%
mutate(tissue = paste(species, tissue, sep = '_')) %>%
select(-avg_count,-species) %>%
pivot_wider(names_from = tissue, values_from = median_count,values_fill = 0)
corr.res <- cor(corr.data[,-1],method = 'spearman') %>%
as.data.frame() %>%
rownames_to_column() %>%
filter(str_detect(rowname,'human')) %>%
select(1,contains('bear')) %>%
column_to_rownames(var='rowname')
pheatmap(corr.res,
display_numbers = T,
border_color = 'white',
number_color = 'black',
color=viridis(50,begin = .45))
cor.test(x=corr.data$bear_Muscle,y=corr.data$human_Muscle,method = 'spearman')
pca.data <- combined.tmm.forPlot %>%
filter(str_detect(tissue,'dip') | str_detect(tissue,'us') | str_detect(tissue,'iv')) %>%
select(ogid = 1,sample,tmm_count,species,tissue) %>%
mutate(treatment = ifelse(species=='human','human',
ifelse(str_detect(tissue,'Hibern'),'Hibernation',
ifelse(str_detect(tissue,'Hyper'),'Hyperphagia',
ifelse(str_detect(tissue,'Active'),'Active','Necropsy'))))) %>%
mutate(tissue_simple = ifelse(str_detect(tissue,'dip'),'Adipose',
ifelse(str_detect(tissue,'us'),'Muscle','Liver'))) %>%
mutate(sample_detail = paste(sample,species,treatment,tissue_simple,sep = ':')) %>%
select(ogid,sample_detail,tmm_count) %>%
mutate(tmm_count = log10(tmm_count+0.001)) %>%
pivot_wider(names_from = sample_detail,values_from = tmm_count) %>%
filter(ogid %in% combined.tmm.forPlot.active.goodGenes$og_id) %>%
# select(1,contains('Adipose')) %>%
rowwise() %>%
mutate(median = median(c_across(where(is.numeric)), na.rm = TRUE)) %>%
# filter(ogid != 'OG0000812') %>%
as.data.frame() %>%
column_to_rownames(var = 'ogid') %>%
ungroup() %>%
arrange(-median) %>%
top_n(n=10000,wt=median) %>%
select(-median) %>%
as.matrix()
dim(pca.data)
pca.data.bear <- combined.tmm.forPlot %>%
# filter(str_detect(tissue,'dip') | str_detect(tissue,'us') | str_detect(tissue,'iv')) %>%
select(ogid = 1,sample,tmm_count,species,tissue) %>%
mutate(treatment = ifelse(species=='human','human',
ifelse(str_detect(tissue,'Hibern'),'Hibernation',
ifelse(str_detect(tissue,'Hyper'),'Hyperphagia',
ifelse(str_detect(tissue,'Active'),'Active','Necropsy'))))) %>%
mutate(tissue = ifelse(tissue == 'Adipose (Subcutaneous)','Adipose',tissue)) %>%
mutate(tissue_simple = ifelse(str_detect(tissue,'dip'),'Adipose',
ifelse(str_detect(tissue,'us'),'Muscle','Liver'))) %>%
filter(species != 'human') %>%
mutate(sample_detail = paste(sample,species,treatment,tissue,sep = ':')) %>%
select(ogid,sample_detail,tmm_count) %>%
mutate(tmm_count = log10(tmm_count+0.001)) %>%
pivot_wider(names_from = sample_detail,values_from = tmm_count) %>%
filter(ogid %in% combined.tmm.forPlot.active.goodGenes$og_id) %>%
# select(1,contains('Adipose')) %>%
rowwise() %>%
mutate(median = median(c_across(where(is.numeric)), na.rm = TRUE)) %>%
# filter(ogid != 'OG0000812') %>%
as.data.frame() %>%
column_to_rownames(var = 'ogid') %>%
ungroup() %>%
arrange(-median) %>%
top_n(n=10000,wt=median) %>%
select(-median) %>%
as.matrix()
pca.data.all.sds <- combined.tmm.forPlot %>%
select(ogid = 1,sample,tmm_count,species,tissue) %>%
mutate(treatment = ifelse(species=='human','human',
ifelse(str_detect(tissue,'Hibern'),'Hibernation',
ifelse(str_detect(tissue,'Hyper'),'Hyperphagia',
ifelse(str_detect(tissue,'Active'),'Active','Necropsy'))))) %>%
mutate(tissue_simple = str_split_fixed(tissue,'[_ ]',2)[,1]) %>%
mutate(sample_detail = paste(sample,species,treatment,tissue,sep = ':')) %>%
select(ogid,sample_detail,tmm_count) %>%
mutate(tmm_count = log10(tmm_count+1)) %>%
pivot_wider(names_from = sample_detail,values_from = tmm_count) %>%
filter(ogid %in% combined.tmm.forPlot.active.goodGenes$og_id) %>%
# select(1,contains('Adipose')) %>%
mutate(stdev = rowSds(as.matrix(.[,-1]))) %>%
as.data.frame() %>%
column_to_rownames(var = 'ogid') %>%
ungroup() %>%
arrange(-stdev) %>%
# filter(stdev > 0.5) %>%
top_n(n=250,wt=stdev) %>%
# slice_max(order_by = stdev,prop = 0.05) %>%
select(-stdev) %>%
as.matrix()
# pca.res <- prcomp(t(pca.data))
# pca.res.adip <- prcomp(t(pca.data.adip))
# pca.res.liv <-  prcomp(t(pca.data.liv ))
# pca.res.musc <- prcomp(t(pca.data.musc))
pca.res.bear <- prcomp(t(pca.data.bear))
# pca.res.human <- prcomp(t(pca.data.human))
# pca.res.all <- prcomp(t(pca.data.all))
pca.res.all.sds <- prcomp(t(pca.data.all.sds))
p.bears.all <- pca.scores.bear %>%
mutate(tissue_simple = str_split_fixed(tissue,'[ (]',2)[,1]) %>%
mutate(tissue_simple = ifelse(str_detect(tissue,'Kidney'),tissue,tissue_simple)) %>%
ggplot(aes(x=PC1,y=PC2,fill=tissue_simple,color=tissue_simple,shape=treatment)) +
geom_point(size=4,alpha=0.8,show.legend = T,color='black') +
scale_shape_manual(values=c('Active'=21,'Hibernation'=24,'Hyperphagia'=22,'Necropsy'=23))+
ggrepel::geom_text_repel(aes(label=tissue_simple),show.legend = T) +
cols4all::scale_fill_discrete_c4a_cat(palette = 'rainbow') +
cols4all::scale_color_discrete_c4a_cat(palette = 'rainbow') +
xlab(paste('PC1 (Variance explained: ',summary(pca.res.bear)$importance[2,1]*100,'%)',sep='')) +
ylab(paste('PC2 (Variance explained: ',summary(pca.res.bear)$importance[2,2]*100,'%)',sep='')) +
theme_linedraw() + theme(aspect.ratio = 1)
# Bear only
pca.scores.bear <- pca.res.bear$x %>%
as.data.frame() %>%
rownames_to_column() %>%
separate(rowname,sep='[:]',into = c('sample','species','treatment','tissue')) %>%
mutate(tissue = str_split_fixed(tissue,'[_]',2)[,1]) %>%
filter(tissue != 'NA')
p.bears.all <- pca.scores.bear %>%
mutate(tissue_simple = str_split_fixed(tissue,'[ (]',2)[,1]) %>%
mutate(tissue_simple = ifelse(str_detect(tissue,'Kidney'),tissue,tissue_simple)) %>%
ggplot(aes(x=PC1,y=PC2,fill=tissue_simple,color=tissue_simple,shape=treatment)) +
geom_point(size=4,alpha=0.8,show.legend = T,color='black') +
scale_shape_manual(values=c('Active'=21,'Hibernation'=24,'Hyperphagia'=22,'Necropsy'=23))+
ggrepel::geom_text_repel(aes(label=tissue_simple),show.legend = T) +
cols4all::scale_fill_discrete_c4a_cat(palette = 'rainbow') +
cols4all::scale_color_discrete_c4a_cat(palette = 'rainbow') +
xlab(paste('PC1 (Variance explained: ',summary(pca.res.bear)$importance[2,1]*100,'%)',sep='')) +
ylab(paste('PC2 (Variance explained: ',summary(pca.res.bear)$importance[2,2]*100,'%)',sep='')) +
theme_linedraw() + theme(aspect.ratio = 1)
p.bears.all
pca.scores.all.sds <- pca.res.all.sds$x %>%
as.data.frame() %>%
rownames_to_column() %>%
separate(rowname,sep='[:]',into = c('sample','species','treatment','tissue')) %>%
mutate(tissue = str_split_fixed(tissue,'[_ ]',2)[,1]) %>%
filter(tissue != 'NA') %>%
mutate(tissue = str_replace_all(tissue,'Atrium','Heart'),
tissue = str_replace_all(tissue,'Ventricle','Heart'),
tissue = str_replace_all(tissue,'Small','Small Intestine'),
tissue = str_replace_all(tissue,'Gall','Gall Bladder'))
h.pca1 <- ggplot(pca.scores.all.sds,aes(x=PC1,y=PC2,color=tissue,fill=tissue,shape=species)) +
geom_point(size=4,alpha=0.7,show.legend = T,color='black') +
# scale_shape_manual(values=c('Active'=1,'Hibernation'=2,'human'=0,'Hyperphagia'=4,'Necropsy'=5))+ ### Use when shape=treatment
scale_shape_manual(values=c('human'=24,'bear'=21))+### use when shape=species
cols4all::scale_fill_discrete_c4a_cat(palette = 'rainbow') +
cols4all::scale_color_discrete_c4a_cat(palette = 'rainbow') +
ggrepel::geom_text_repel(aes(label=tissue)) +
scale_x_reverse() +
xlab(paste('PC1 (Variance explained: ',summary(pca.res.all.sds)$importance[2,1]*100,'%)',sep='')) +
ylab(paste('PC2 (Variance explained: ',summary(pca.res.all.sds)$importance[2,2]*100,'%)',sep='')) +
theme_linedraw() + theme(panel.grid = element_line(color = 'grey60'),aspect.ratio = 1)
h.pca1
h.pca1 | h.pca2 + plot_annotation(tag_levels = 'A')
h.pca2
library(biomaRt)
library(patchwork)
library(ggbeeswarm)
library(tidyverse)
library(cols4all)
hks <- read_tsv('analyses/candidate_genes/housekeeping/HK_genes.ensemblIDs.txt')
og.info <- read_tsv('analyses/orthoFinder/id_conversion/HumanBearOrthologs_wIdConvert_10.20.21.tsv') %>%
mutate(humanGeneID = str_split_fixed(humanGeneID,'[.]',2)[,1])
hks.og <- hks %>%
left_join(og.info,by=c('ensembl_gene_id'='humanGeneID')) %>%
filter(!is.na(orthogroup1))
length(unique(hks.og$ensembl_gene_id))
sum(unique(hks.og$ensembl_gene_id) %in% hks$ensembl_gene_id) / length(hks$ensembl_gene_id) # ~88% of HKs have OG info
sample_info_necrop <- readxl::read_xlsx('data/sample_info/MultiTissue_mapping_stats.xlsx') %>%
janitor::clean_names() %>%
dplyr::select(sample_id,tissue)
sample_info_prevRNA <- readxl::read_xlsx('data/sample_info/prevRNA_SampleInfo.xlsx') %>%
janitor::clean_names() %>%
mutate(tissue = paste(tissue,phys_state,sep='_')) %>%
mutate(sample_id = str_to_upper(str_split_fixed(sample,'[_]',2)[,1])) %>%
dplyr::select(sample_id, tissue)
all.sample_info <- sample_info_necrop %>%
bind_rows(sample_info_prevRNA)
bear.raw.mat <- read_tsv('analyses/rnaseq_normalization/bear_oglevel_rawCounts.txt')
bear.raw.mat <- read_tsv('analyses/rnaseq_normalization/bear_oglevel_rawCounts.txt')
human.raw.mat <- read_tsv('analyses/rnaseq_normalization/human_oglevel_rawCounts.txt')
bear.raw.df <- bear.raw.mat %>%
dplyr::rename(og_id=orthogroup1) %>%
filter(str_detect(og_id,'OG')) %>%
dplyr::select(-og_length,-ittfl_s44,-cfa_s9)
human.raw.df <- human.raw.mat %>%
dplyr::rename(og_id=orthogroup1) %>%
filter(str_detect(og_id,'OG')) %>%
dplyr::select(-og_length)
sum(bear.raw.df$og_id %in% human.raw.df$og_id)
combined.raw.df <- bear.raw.df %>%
left_join(human.raw.df,by='og_id') %>%
drop_na()
hk.raw <- combined.raw.df %>%
mutate(is_hk = ifelse(og_id %in% hks.og$orthogroup1,T,F))
combined.raw.forPlot <- hk.raw %>%
pivot_longer(-c(1,286),names_to = 'sample',values_to = 'raw_count') %>%
mutate(species = ifelse(str_detect(sample,'GTEX'),'human','bear')) %>%
mutate(sample = str_replace_all(sample,'_hy','hy')) %>%
mutate(sample = str_replace_all(sample,'_hi','hi')) %>%
mutate(sample = str_replace_all(sample,'_fa','fa')) %>%
mutate(sample_id = str_split_fixed(sample,'[_]',2)[,1] %>% str_to_upper()) %>%
mutate(sample_id = ifelse(species=='human',sample,sample_id)) %>%
left_join(all.sample_info,by='sample_id') %>%
mutate(tissue = ifelse(species=='human',str_split_fixed(sample,'[_]',2)[,1],tissue))
bear.tpm.mat <- read_tsv('analyses/rnaseq_normalization/bear_oglevel_tpmCounts.txt')
human.tpm.mat <- read_tsv('analyses/rnaseq_normalization/human_oglevel_tpmCounts.txt')
bear.tpm.df <- bear.tpm.mat %>%
dplyr::rename(og_id=rowname) %>%
filter(str_detect(og_id,'OG')) %>%
dplyr::select(-ittfl_s44,-cfa_s9)
human.tpm.df <- human.tpm.mat %>%
dplyr::rename(og_id=rowname) %>%
filter(str_detect(og_id,'OG'))
combined.tpm.df <- bear.tpm.df %>%
left_join(human.tpm.df) %>%
drop_na()
hk.tpms <- combined.tpm.df %>%
mutate(is_hk = ifelse(og_id %in% hks.og$orthogroup1,T,F))
combined.tpm.forPlot <- hk.tpms %>%
pivot_longer(-c(1,286),names_to = 'sample',values_to = 'tpm_count') %>%
mutate(species = ifelse(str_detect(sample,'GTEX'),'human','bear')) %>%
mutate(sample = str_replace_all(sample,'_hy','hy')) %>%
mutate(sample = str_replace_all(sample,'_hi','hi')) %>%
mutate(sample = str_replace_all(sample,'_fa','fa')) %>%
mutate(sample_id = str_split_fixed(sample,'[_]',2)[,1] %>% str_to_upper()) %>%
mutate(sample_id = ifelse(species=='human',sample,sample_id)) %>%
left_join(all.sample_info,by='sample_id') %>%
mutate(tissue = ifelse(species=='human',str_split_fixed(sample,'[_]',2)[,1],tissue))
tmms <- read_tsv('analyses/rnaseq_normalization/combined_oglevel_tmmCounts.txt') %>%
dplyr::select(-ittfl_s44)
tmms <- read_tsv('analyses/rnaseq_normalization/combined_oglevel_tmmCounts.txt') %>%
dplyr::select(-ittfl_s44)
hk.tmms <- tmms %>%
mutate(is_hk = ifelse(og_id %in% hks.og$orthogroup1,T,F))
combined.tmm.forPlot <- hk.tmms %>%
pivot_longer(-c(1,286),names_to = 'sample',values_to = 'tmm_count') %>%
mutate(species = ifelse(str_detect(sample,'GTEX'),'human','bear')) %>%
mutate(sample = str_replace_all(sample,'_hy','hy')) %>%
mutate(sample = str_replace_all(sample,'_hi','hi')) %>%
mutate(sample = str_replace_all(sample,'_fa','fa')) %>%
mutate(sample_id = str_split_fixed(sample,'[_]',2)[,1] %>% str_to_upper()) %>%
mutate(sample_id = ifelse(species=='human',sample,sample_id)) %>%
left_join(all.sample_info,by='sample_id') %>%
mutate(tissue = ifelse(species=='human',str_split_fixed(sample,'[_]',2)[,1],tissue))
combined.tmm.forPlot
combined.allCounts.forPlot <- combined.tmm.forPlot %>%
left_join(combined.raw.forPlot) %>%
left_join(combined.tpm.forPlot)
combined.tmm.forPlot.active <- combined.tmm.forPlot %>%
filter((species == 'bear' & str_detect(tissue,'Active')) | (species == 'human')) %>%
group_by(og_id,is_hk,species,tissue) %>%
summarise(median_count = median(tmm_count),
avg_count = mean(tmm_count)) %>%
group_by(og_id) %>%
mutate(tissue = str_split_fixed(tissue,'[_]',2)[,1]) %>%
filter(tissue %in% c('Adipose','Liver','Muscle'))
combined.tmm.forPlot.active.v2 <- combined.tmm.forPlot.active %>%
dplyr::select(og_id,is_hk,species,tissue,median_count) %>%
pivot_wider(names_from = species,values_from = median_count)
combined.tmm.forPlot.active.goodGenes <- combined.tmm.forPlot.active.v2 %>%
filter(bear > 0 & human > 0)
p1 <- ggplot(combined.tmm.forPlot.active.goodGenes,aes(x=human,y=bear,color=is_hk)) +
facet_wrap(~tissue) +
geom_point(data=subset(combined.tmm.forPlot.active.goodGenes,is_hk=='FALSE'),alpha=0.2) +
geom_point(data=subset(combined.tmm.forPlot.active.goodGenes,is_hk=='TRUE'),alpha=0.3) +
geom_abline(slope=1,intercept = 0,lty=2) +
scale_color_manual(values = c('FALSE'='#E69F00','TRUE'='#0072B2')) +
scale_y_log10() +
labs(x='Human - Median Expression per Orthogroup\n(log10 scaled axis)',y='Bear - Median Expression per Orthogroup\n(log10 scaled axis)') +
scale_x_log10() +
theme_linedraw()
p1
p2 <- ggplot(combined.tmm.forPlot.active.v2,aes(x=log2(human / bear),color=is_hk)) +
facet_wrap(~tissue) +
geom_density(lwd=1) +
geom_vline(xintercept = 0,lty=2) +
scale_color_manual(values = c('FALSE'='#E69F00','TRUE'='#0072B2')) +
xlab('Log2(Human Expression / Bear Expression)\n (Median Orthogroup-level Counts)') +
theme_linedraw()
p1 / p2
ggplot(combined.tmm.forPlot.active.v2,aes(y=log2(human / bear),x=is_hk,color=is_hk)) +
facet_wrap(~tissue) +
geom_boxplot(lwd=0.5) +
xlab('Log2(Human Expression / Bear Expression)\n (Median Orthogroup-level Counts)') +
theme_linedraw()
combined.tmm.stDevs.bySpecies <- combined.tmm.forPlot.active.v2 %>%
group_by(og_id) %>%
mutate(bear_isZero = sum(bear==0),human_isZero = sum(human==0)) %>%
filter(bear_isZero < 3 & human_isZero < 3) %>%
dplyr::select(-bear_isZero,-human_isZero) %>%
mutate(bear = log10(bear+1),human=log10(human+1)) %>%
mutate(bear_stdev = sd(bear),human_stdev = sd(human)) %>%
dplyr::select(og_id,is_hk,bear=bear_stdev,human=human_stdev) %>%
unique() %>%
pivot_longer(-c(1,2),names_to = 'species',values_to = 'stdev')
hk.percUnder1.human <- nrow(combined.tmm.stDevs.bySpecies[which(combined.tmm.stDevs.bySpecies$species=='human' & combined.tmm.stDevs.bySpecies$is_hk==T & combined.tmm.stDevs.bySpecies$stdev< 1),])  / nrow(combined.tmm.stDevs.bySpecies[which(combined.tmm.stDevs.bySpecies$species=='human' & combined.tmm.stDevs.bySpecies$is_hk==T),1]) * 100
hk.percUnder1.bear <- nrow(combined.tmm.stDevs.bySpecies[which(combined.tmm.stDevs.bySpecies$species=='bear' & combined.tmm.stDevs.bySpecies$is_hk==T & combined.tmm.stDevs.bySpecies$stdev< 1),])  / nrow(combined.tmm.stDevs.bySpecies[which(combined.tmm.stDevs.bySpecies$species=='bear' & combined.tmm.stDevs.bySpecies$is_hk==T),1]) * 100
p.separate <- ggplot(combined.tmm.stDevs.bySpecies,aes(x=is_hk,y=stdev,fill=is_hk)) +
# geom_jitter(alpha=0.1) +
geom_boxplot(outlier.alpha = 0.5,show.legend = F) +
# ggrepel::geom_text_repel(data=subset(combined.tmm.stDevs.bySpecies,(species=='bear' & is_hk & stdev > 1)),aes(label=og_id)) +
geom_hline(yintercept = 1,lty=2) +
facet_wrap(~species,nrow = 1) +
scale_y_continuous(limits = c(0,3.2)) +
labs(x='Is Housekeeping Orthogroup?',y='standard deviation (log10(tmm count + 0.1)',title = 'Standard deviation across tissues (human and bear separate)') +
theme_linedraw() + theme(panel.grid = element_blank())
p.human <-  ggplot(subset(combined.tmm.stDevs.bySpecies,species=='human'),aes(x=is_hk,y=stdev,fill=is_hk)) +
# geom_jitter(alpha=0.1) +
geom_boxplot(outlier.alpha = 0.5,show.legend = F) +
# ggrepel::geom_text_repel(data=subset(combined.tmm.stDevs.bySpecies,(species=='bear' & is_hk & stdev > 1)),aes(label=og_id)) +
scale_fill_manual(values = c('FALSE'='#E69F00','TRUE'='#0072B2')) +
annotate('text',label=paste('Percent HKOs\nwith SD < 1: ',format(round(hk.percUnder1.human, 2), nsmall = 2),'%',sep=''),x=T,y=2.5) +
geom_hline(yintercept = 1,lty=2) +
scale_y_continuous(limits = c(0,3.2)) +
labs(x='Is Housekeeping Orthogroup?',y='standard deviation (log10(tmm count + 0.1)',title = 'Human') +
theme_linedraw() + theme(panel.grid = element_blank())
p.bear <-  ggplot(subset(combined.tmm.stDevs.bySpecies,species=='bear'),aes(x=is_hk,y=stdev,fill=is_hk)) +
# geom_jitter(alpha=0.1) +
geom_boxplot(outlier.alpha = 0.5,show.legend = F) +
# ggrepel::geom_text_repel(data=subset(combined.tmm.stDevs.bySpecies,(species=='bear' & is_hk & stdev > 1)),aes(label=og_id)) +
geom_hline(yintercept = 1,lty=2) +
scale_fill_manual(values = c('FALSE'='#E69F00','TRUE'='#0072B2')) +
annotate('text',label=paste('Percent HKOs\nwith SD < 1: ',format(round(hk.percUnder1.bear, 2), nsmall = 2),'%',sep=''),x=T,y=2.5) +
scale_y_continuous(limits = c(0,3.2)) +
labs(x='Is Housekeeping Orthogroup?',y='standard deviation (log10(tmm count + 0.1)',title = 'Bear') +
theme_linedraw() + theme(panel.grid = element_blank())
combined.tmm.stDevs.combined <- combined.tmm.forPlot.active.v2 %>%
group_by(og_id) %>%
mutate(bear_isZero = sum(bear==0),human_isZero = sum(human==0)) %>%
filter(bear_isZero < 3 & human_isZero < 3) %>%
dplyr::select(-bear_isZero,-human_isZero) %>%
pivot_longer(-c(1,2,3),names_to = 'species',values_to = 'tmmcount') %>%
mutate(stdev = sd(log10(tmmcount+0.1))) %>%
dplyr::select(og_id,is_hk,stdev) %>%
unique()
hk.percUnder1.combined <- nrow(combined.tmm.stDevs.combined[which(combined.tmm.stDevs.combined$is_hk==T & combined.tmm.stDevs.combined$stdev< 1),])  / nrow(combined.tmm.stDevs.combined[which(combined.tmm.stDevs.combined$is_hk==T),1]) * 100
p.combined <- ggplot(combined.tmm.stDevs.combined,aes(x=is_hk,y=stdev,fill=is_hk)) +
geom_boxplot(outlier.alpha = 0.5,show.legend = F) +
# geom_violin(trim = T,) +
geom_hline(yintercept = 1,lty=2) +
scale_fill_manual(values = c('FALSE'='#E69F00','TRUE'='#0072B2')) +
annotate('text',label=paste('Percent HKOs\nwith SD < 1: ',format(round(hk.percUnder1.combined, 2), nsmall = 2),'%',sep=''),x=T,y=2.5) +
labs(x='Is Housekeeping Orthogroup?',y='',title = 'Human and Bear') +
scale_y_continuous(limits = c(0,3.2)) +
theme_linedraw() + theme(panel.grid = element_blank())
combined.tmm.stDevs.combined %>%
filter(is_hk==T) %>%
mutate(lessThan1 = ifelse(stdev < 1,T,F)) %>%
group_by(lessThan1) %>%
tally() %>%
mutate(percent = n / sum(n)) # 99.3% of housekeeping gene orthogroups have st dev < 1 across all species, tissues
p.human + p.bear + p.combined
combined.allCounts.forPlot.active <- combined.allCounts.forPlot %>%
filter((species == 'bear' & str_detect(tissue,'Active')) | (species == 'human')) %>%
group_by(og_id,is_hk,species,tissue) %>%
summarise(median_tmm = median(tmm_count),
median_raw = median(raw_count),
median_tpm = median(tpm_count)) %>%
group_by(og_id) %>%
mutate(tissue = str_split_fixed(tissue,'[_]',2)[,1]) %>%
filter(tissue %in% c('Adipose','Liver','Muscle')) %>%
filter(is_hk==T) %>%
pivot_longer(-c(1,2,3,4),names_to = 'count_type',values_to = 'count') %>%
pivot_wider(names_from = species,values_from = count) %>%
filter(bear > 0 & human > 0) %>%
mutate(count_type = factor(count_type,levels=c('median_raw','median_tpm','median_tmm')))
combined.allCounts.forPlot.active.ratios <- combined.allCounts.forPlot.active %>%
filter(bear > 0 & human > 0) %>%
mutate(bearHumanRatio = log2( human / bear))
p.a <- ggplot(combined.allCounts.forPlot.active,aes(x=human,y=bear,color=count_type)) +
facet_grid(cols = vars(count_type),rows = vars(tissue)) +
geom_point(alpha=0.3) +
geom_abline(slope=1,intercept = 0,lty=2) +
scale_y_log10() +
labs(x='Human - Median Expression per Orthogroup\n(log10 scaled axis)',y='Bear - Median Expression per Orthogroup\n(log10 scaled axis)') +
scale_x_log10() +
theme_linedraw()
p.b <- ggplot(combined.allCounts.forPlot.active.ratios,aes(x=bearHumanRatio,color=count_type,fill=count_type)) +
geom_density(alpha=0.2) +
facet_grid(rows = vars(tissue)) +
geom_vline(xintercept = 0,lty=2) +
theme_linedraw()
p.a + p.b + plot_layout(ncol = 2,widths = c(2,1),guides = 'collect')
p.liv <- ggplot(subset(combined.allCounts.forPlot.active,tissue=='Liver'),aes(x=human,y=bear,color=count_type)) +
facet_grid(cols = vars(count_type)) +
geom_point(alpha=0.2,show.legend = F) +
geom_abline(slope=1,intercept = 0,lty=2) +
scale_y_log10() +
labs(x='Human - Median Expression per Orthogroup\n(log10 scaled axis)',y='Bear - Median Expression per Orthogroup\n(log10 scaled axis)') +
scale_x_log10() +
theme_linedraw()+ theme(panel.grid = element_blank())
p.liv.2 <- ggplot(subset(combined.allCounts.forPlot.active.ratios,tissue=='Liver'),aes(x=bearHumanRatio,color=count_type,fill=count_type)) +
geom_density(alpha=0.2) +
geom_vline(xintercept = 0,lty=2) +
theme_linedraw() + theme(panel.grid = element_blank())
p.liv + p.liv.2 + plot_layout(widths = c(3,1))
combined.allCounts.stDevs.combined <- combined.allCounts.forPlot.active %>%
group_by(og_id,count_type) %>%
mutate(bear_isZero = sum(bear==0),human_isZero = sum(human==0)) %>%
filter(bear_isZero < 3 & human_isZero < 3) %>%
dplyr::select(-bear_isZero,-human_isZero) %>%
pivot_longer(-c(1,2,3,4),names_to = 'species',values_to = 'tmmcount') %>%
mutate(stdev = sd(log10(tmmcount+0.1))) %>%
dplyr::select(og_id,is_hk,count_type,stdev) %>%
unique()
ggplot(combined.allCounts.stDevs.combined,aes(x=is_hk,y=stdev,fill=is_hk)) +
geom_boxplot(outlier.alpha = 0.5,show.legend = F) +
# geom_violin(trim = T,) +
geom_hline(yintercept = 1,lty=2) +
facet_wrap(~count_type) +
labs(x='Is Housekeeping Orthogroup?',y='',title = 'Human and Bear') +
scale_y_continuous(limits = c(0,3.2)) +
theme_linedraw() + theme(panel.grid = element_blank())
# ## Look at expression of HKs across necropsy tissues
# ## Look at expression of HKs across necropsy tissues
#
# ## Look at expression of HKs across necropsy tissues
#
# combined.tmm.necrop <- hk.tmms %>%
# ## Look at expression of HKs across necropsy tissues
#
# combined.tmm.necrop <- hk.tmms %>%
#   pivot_longer(-c(1,288),names_to = 'sample',values_to = 'tmm_count') %>%
# ## Look at expression of HKs across necropsy tissues
#
# combined.tmm.necrop <- hk.tmms %>%
#   pivot_longer(-c(1,288),names_to = 'sample',values_to = 'tmm_count') %>%
#   mutate(species = ifelse(str_detect(sample,'gtex'),'human','bear')) %>%
