library(tidyverse)
library(janitor)
library(DESeq2)
library(pheatmap)
library(viridis)
library(tidyverse)
library(janitor)
library(DESeq2)
library(edgeR)
library(pheatmap)
library(viridis)
library(patchwork)
bear.tpm.mat <- read_tsv('analyses/rnaseq_normalization/bear_oglevel_tpmCounts.txt')
human.tpm.mat <- read_tsv('analyses/rnaseq_normalization/human_oglevel_tpmCounts.txt')
bear.tpm.df <- bear.tpm.mat %>%
dplyr::rename(og_id=rowname) %>%
filter(str_detect(og_id,'OG'))
human.tpm.df <- human.tpm.mat %>%
dplyr::rename(og_id=rowname) %>%
filter(str_detect(og_id,'OG'))
combined.tpm.df <- bear.tpm.df %>%
left_join(human.tpm.df) %>%
drop_na()
combined.tpm.mat <- as.matrix(combined.tpm.df[,-1])
row.names(combined.tpm.mat) <- combined.tpm.df$og_id
edgeR.delist <- DGEList(counts = combined.tpm.mat)
edgeR.delist <- calcNormFactors(edgeR.delist)
combined.tmm.counts <- cpm(edgeR.delist) %>% as.data.frame() %>% rownames_to_column(var='og_id')
head(combined.tmm.counts)
# write_tsv(combined.tmm.counts,'analyses/rnaseq_normalization/combined_oglevel_tmmCounts.txt')
combined.tmm.counts <- read_tsv('analyses/rnaseq_normalization/combined_oglevel_tmmCounts.txt')
# Reading bear sample info back in in case starting from here instead of full script
sample_info_necrop <- readxl::read_xlsx('data/misc_fromMichael/Necropsy_mapping_stats.xlsx') %>%
clean_names() %>%
select(sample_id,tissue)
sample_info_prevRNA <- readxl::read_xlsx('data/prevRNAseq_info/prevRNA_SampleInfo.xlsx') %>%
clean_names() %>%
mutate(tissue = paste(tissue,phys_state,sep='_')) %>%
mutate(sample_id = str_to_upper(str_split_fixed(sample,'[_]',2)[,1])) %>%
select(sample_id, tissue)
all.sample_info <- sample_info_necrop %>%
bind_rows(sample_info_prevRNA)
combined.tmm.forPlot <- combined.tmm.counts %>%
pivot_longer(-1,names_to = 'sample',values_to = 'tmm_count') %>%
mutate(species = ifelse(str_detect(sample,'GTEX'),'human','bear')) %>%
mutate(sample = str_replace_all(sample,'_hy','hy')) %>%
mutate(sample = str_replace_all(sample,'_hi','hi')) %>%
mutate(sample = str_replace_all(sample,'_fa','fa')) %>%
mutate(sample_id = str_split_fixed(sample,'[_]',2)[,1] %>% str_to_upper()) %>%
left_join(all.sample_info,by='sample_id') %>%
mutate(sample_id = ifelse(species=='human',sample,sample_id)) %>%
mutate(tissue = ifelse(species=='human',str_split_fixed(sample,'[_]',2)[,1],tissue))
